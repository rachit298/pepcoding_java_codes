import java.util.*;

public class Main
{
  static class Pair
  {

    Node node;
    int state;

      Pair (Node n, int s)
    {
      this.node = n;
      this.state = s;
    }
  }

  static class Node
  {

    int data;
    Node left;
    Node right;

      Node (int data)
    {
      this.data = data;
    }
  }

  public static Node construct (Integer[]arr)
  {

    Node root = new Node (arr[0]);

    Stack < Pair > st = new Stack <> ();

    Pair p = new Pair (root, 1);

    st.push (p);

    int idx = 0;

    while (st.size () > 0)
      {

	Pair top = st.peek ();

	if (top.state == 1)
	  {
	    idx++;
	    top.state++;

	    if (arr[idx] != null)
	      {

		Node lc = new Node (arr[idx]);
		top.node.left = lc;

		Pair lcp = new Pair (lc, 1);
		st.push (lcp);
	      }
	  }
	else if (top.state == 2)
	  {
	    idx++;
	    top.state++;

	    if (arr[idx] != null)
	      {

		Node rc = new Node (arr[idx]);
		top.node.right = rc;

		Pair rcp = new Pair (rc, 1);
		st.push (rcp);
	      }
	  }
	else if (top.state == 3)
	  {
	    st.pop ();
	  }
      }

    return root;
  }

  public static void display (Node root)
  {

    if (root == null)
      {
	return;
      }

    String str = "";
    str += root.left != null ? root.left.data : ".";
    str += " <- " + root.data + " -> ";
    str += root.right != null ? root.right.data : ".";

    System.out.println (str);

    display (root.left);
    display (root.right);
  }

  public static void main (String[]args)
  {

    Integer[]arr =
    {
    50, 25, 12, null, null, 37, 30, null, null, null, 75, 62, null, 70,
	null, null, 87, null, null};

    Node root = construct (arr);

    display (root);
  }

}
